@model Yoomi.Entity.OrderForm
@{
    ViewData["Title"] = "Comanda";
}



<form id="orderForm">
    <div>
        <h4>Produse</h4>
        <hr />

        <div class="row">
            <div class="col-lg-4">
                <img src="~/images/bib240tet0inc-thumb.png" style="" />
                <input id="spinner1" name="Products" value="0"><br />
                <input type="hidden" name="ProductsNm" value="biberon 240ml tetina 0luni si încalzitor" />
                <b>125 lei</b> -  biberon 240ml tetina 0luni&încalzitor



            </div>
            <div class="col-lg-4">
                <img src="~/images/inc-thumb.png" style="" />
                <input id="spinner2" name="Products" value="0"><br />
                <input type="hidden" name="ProductsNm" value="încalzitor" />
                <b>90 lei</b> - încalzitor

            </div>
            <div class="col-lg-4">
                <img src="~/images/bib140tet-thumb.png" style="" />
                <input id="spinner3" name="Products" value="0"><br />
                <input type="hidden" name="ProductsNm" value="biberon 140ml tetina 0luni" />
                <b>50 lei</b> - biberon 140ml tetina 0luni

            </div>
        </div>
        <br /><br />
        <div class="row">
            <div class="col-lg-4">
                <img src="~/images/bib240tet0-thumb.png" style="" />
                <input id="spinner4" name="Products" value="0"><br />
                <input type="hidden" name="ProductsNm" value="biberon 240ml tetina 0luni" />
                <b>50 lei</b> - biberon 240ml tetina 0luni

            </div>
            <div class="col-lg-4">
                <img src="~/images/tet1-thumb.png" style="" />
                <input id="spinner5" name="Products" value="0"><br />
                <input type="hidden" name="ProductsNm" value="tetina >1luna" />
                <b>35 lei</b> - tetina >1luna

            </div>

            <div class="col-lg-4">
                <img src="~/images/tet3-thumb.png" style="" />
                <input id="spinner6" name="Products" value="0"><br />
                <input type="hidden" name="ProductsNm" value="tetina >3luni" />
                <b>35 lei</b> - tetina >3luni

            </div>
        </div>
        <div class="row yellowbkg">
            <img src="~/images/bib140tet-thumb.png" style="float: left; padding-right: 10px;" />
            <h3>Cadou biberon Yoomi pentru proaspetele mamici ale maternitatii</h3>

            <h3>CADOU Biberon 140ml + tetina 0luni</h3>

        </div>
        <br /><br />
        <div class="row">
            <div class="col-lg-4">
                <b>la achizitia</b>
                <img src="~/images/bib240tet0inc-thumb.png" style="" />
                <input id="spinner7" name="Products" value="0"><br />
                <input type="hidden" name="ProductsNm" value="Pachetului New Borny" />
                <b>195 lei</b> - Pachetului New Borny

            </div>
            <div class="col-md-4">
                Sticla 240ml +<br />
                tetina 0luni +<br />
                2 tetine >1luna +<br />
                2 tetine >3luni<br />
                + încalzitor<br />
            </div>
        </div>


        <hr />

        <h4>Detalii comanda</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                Nume:
            </dt>
            <dd>
                @Html.TextBoxFor(m => Model.Name, new Dictionary<string, object> { { "class", "form-control" }, { "type", "text" }, { "value", "test" }, { "data-val-required", "This field is required." } })
            </dd>
            <dt>
                Adresa:
            </dt>
            <dd>
                @Html.TextAreaFor(m => Model.Address, new Dictionary<string, object> { { "class", "form-control" }, { "type", "text" }, { "placeholder", "oras, strada, numar, apartament,cod postal" }, { "data-val-required", "This field is required." } })
            </dd>
            <dt>
                Email:
            </dt>
            <dd>
                @Html.TextBoxFor(m => Model.Email, new Dictionary<string, object> { { "class", "form-control" }, { "type", "email" }, { "placeholder", "exemplu@yahoo.com" }, { "data-val-required", "This field is required." } })
            </dd>
            <dt>
                Telefon:
            </dt>
            <dd>
                @Html.TextBoxFor(m => Model.Phone, new Dictionary<string, object> { { "class", "form-control" }, { "type", "tel" }, { "placeholder", "07XXXXXXXX" }, { "data-val-required", "This field is required." } })
            </dd>
        </dl>
    </div>
</form>


<a id="orderanchor" class="btn btn-default">
    Comanda acum
</a>


<script type="text/javascript">

    $('input[name="Products"]').spinner({ step: 1, min: 0, max: 100 });

</script>

@section scripts
{

    <script type="text/javascript">

        $(document)
            .ready(function () {

                $("#orderanchor")
                    .click(function (e) {
                        e.preventDefault();

                        var form = $("#orderForm");
                        //   var validationResult = form.validate();

                        //if (form.valid() == false) {
                        //    $.each(validationResult.errorList, function (index, value) {
                        //        toastr.error("Camp nevalid.", ' ' + value.message);//value.element.getAttribute('data-err')
                        //    });
                        //    return;
                        //}


                        $("#orderanchor").attr('disabled', 'disabled');
                        $.ajax({
                            type: 'POST',
                            //contentType: 'application/json; charset=utf-8',
                            dataType: "json",
                            data: form.serialize(),
                            url: '/Home/SendOrder',
                            success: function (data) {
                                $("#orderanchor").removeAttr('disabled');
                                if (data.result == 'OK') {
                                    toastr.info('Comanda a fost trimisa cu succes.');
                                } else {

                                    toastr.error('', data.message, 20000);
                                }
                            }
                        });
                    });
            });
    </script>

}
